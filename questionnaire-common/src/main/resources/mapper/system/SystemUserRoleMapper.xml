<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.airene.questionnaire.common.mapper.system.SystemUserRoleMapper">

    <resultMap type="net.airene.questionnaire.common.data.entity.system.SystemUserRole" id="SystemUserRoleResult">
        <result property="id"    column="id"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="userId"    column="user_id"    />
        <result property="roleId"    column="role_id"    />
    </resultMap>

	<sql id="selectSystemUserRoleVo">
        SELECT id, create_time, update_time, user_id, role_id FROM t_system_user_role
    </sql>

    <select id="selectSystemUserRoleList" parameterType="net.airene.questionnaire.common.data.entity.system.SystemUserRole" resultMap="SystemUserRoleResult">
        <include refid="selectSystemUserRoleVo"/>
        <where>
            <if test="id != null "> AND id = #{id}</if>
             <if test="createTime != null "> AND create_time = #{createTime}</if>
             <if test="updateTime != null "> AND update_time = #{updateTime}</if>
             <if test="userId != null "> AND user_id = #{userId}</if>
             <if test="roleId != null "> AND role_id = #{roleId}</if>
         </where>
    </select>

    <select id="selectSystemUserRoleById" parameterType="Long" resultMap="SystemUserRoleResult">
        <include refid="selectSystemUserRoleVo"/>
        WHERE id = #{id}
    </select>

    <select id="selectSystemRoleByUserId" resultType="java.lang.Long">
        SELECT role_id FROM t_system_user_role WHERE user_id = #{userId}
    </select>

    <select id="checkSystemRoleByRoleId" resultType="java.lang.Integer">
        SELECT 1 FROM t_system_user_role WHERE role_id = #{roleId} LIMIT 1
    </select>

    <insert id="insertSystemUserRole" parameterType="net.airene.questionnaire.common.data.entity.system.SystemUserRole" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_system_user_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="createTime != null  ">create_time,</if>
			<if test="updateTime != null  ">update_time,</if>
			<if test="userId != null  ">user_id,</if>
			<if test="roleId != null  ">role_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="createTime != null  ">#{createTime},</if>
			<if test="updateTime != null  ">#{updateTime},</if>
			<if test="userId != null  ">#{userId},</if>
			<if test="roleId != null  ">#{roleId},</if>
         </trim>
    </insert>

    <insert id="batchInsertSystemUserRole" parameterType="java.util.Collection">
        INSERT INTO t_system_user_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            create_time, role_id, user_id,
        </trim>
        VALUES
        <foreach collection="list" item="item" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #{item.createTime}, #{item.roleId}, #{item.userId},
            </trim>
        </foreach>
    </insert>

    <update id="updateSystemUserRole" parameterType="net.airene.questionnaire.common.data.entity.system.SystemUserRole">
        UPDATE t_system_user_role
        <trim prefix="SET" suffixOverrides=",">
            <if test="createTime != null  ">create_time = #{createTime},</if>
            <if test="updateTime != null  ">update_time = #{updateTime},</if>
            <if test="userId != null  ">user_id = #{userId},</if>
            <if test="roleId != null  ">role_id = #{roleId},</if>
        </trim>
        WHERE id = #{id}
    </update>

	<delete id="deleteSystemUserRoleById" parameterType="Long">
        DELETE FROM t_system_user_role WHERE id = #{id}
    </delete>

    <delete id="deleteSystemUserRoleByIds" parameterType="String">
        DELETE FROM t_system_user_role WHERE id IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteSystemUserRoleByUserId" parameterType="Long">
        DELETE FROM t_system_user_role WHERE user_id = #{userId}
    </delete>

    <delete id="deleteSystemUserRoleByRoleId" parameterType="Long">
        DELETE FROM t_system_user_role WHERE role_id = #{roleId}
    </delete>

</mapper>
