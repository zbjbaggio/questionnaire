package ${classPageName}.${commonPackageName}.service.impl#if(${moduleName} != '').${moduleName}#end;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import java.util.List;
import ${classPageName}.${commonPackageName}.mapper#if(${moduleName} != '').${moduleName}#end.${className}Mapper;
import ${classPageName}.${commonPackageName}.data.entity#if(${moduleName} != '').${moduleName}#end.${className};
import ${classPageName}.${commonPackageName}.service#if(${moduleName} != '').${moduleName}#end.${className}Service;

/**
 * ${tableComment} 服务层实现
 *
 * @author ${author}
 * @date ${datetime}
 */
@Service
@Slf4j
@RequiredArgsConstructor(onConstructor_ = {@Autowired})
public class ${className}ServiceImpl implements ${className}Service {

	private final ${className}Mapper ${classname}Mapper;

	/**
     * 查询${tableComment}信息
     *
     * @param ${primaryKey.attrname} ${tableComment}ID
     * @return ${tableComment}信息
     */
    @Override
	public ${className} get${className}ById(${primaryKey.attrType} ${primaryKey.attrname}) {
	    return ${classname}Mapper.get${className}ById(${primaryKey.attrname});
	}

	/**
     * 查询${tableComment}列表
     *
     * @param ${classname} ${tableComment}信息
     * @return ${tableComment}集合
     */
	@Override
	public List<${className}> list${className}(${className} ${classname}) {
	    return ${classname}Mapper.list${className}(${classname});
	}

    /**
     * 新增${tableComment}
     *
     * @param ${classname} ${tableComment}信息
     * @return 结果
     */
	@Override
	public int insert${className}(${className} ${classname}) {
	    return ${classname}Mapper.insert${className}(${classname});
	}

	/**
     * 修改${tableComment}
     *
     * @param ${classname} ${tableComment}信息
     * @return 结果
     */
	@Override
	public int update${className}(${className} ${classname}) {
	    return ${classname}Mapper.update${className}(${classname});
	}

	/**
     * 删除${tableComment}对象
     *
     * @param ids 需要删除的数据ID
     * @return 结果
     */
	@Override
	public int delete${className}ByIds(Long[] ids) {
		return ${classname}Mapper.delete${className}ByIds(ids);
	}

}
